@use "./__breakpoints" as b;
@use "sass:map";
@use "./burger.scss";

.header {
  padding: 20px 0;
  position: sticky;
  top: 0;
  z-index: 5;

  ul {
    list-style: none;
  }

  .container,
  &__nav,
  .main-navigation {
    display: flex;
  }

  .container,
  &__nav {
    align-items: center;
  }

  .main-navigation {
    flex: 1 1 100%;
  }

  &__nav {
    margin: 0 0 0 auto;
    gap: 10px;
    @media (min-width: map.get(b.$grid-breakpoints, md)) {
      gap: 30px;
    }
    [aria-current] {
      @media (hover: hover) {
        &:hover {
        }
      }
    }

    li {
      border-radius: 8px;
      padding: 8px 10px;
      transition: 0.35s;
      position: relative;
      @media (hover: hover) {
        &:hover {
          background-color: var(--blur);
          cursor: pointer;

          &.menu-item-has-children {
            a {
              &::after {
                transform: rotate(180deg);
              }
            }

            ul {
              opacity: 1;
              visibility: visible;
              // backdrop-filter: blur(25px);
              background-color: var(--blur);
              li {
                backdrop-filter: none;
                background-color: transparent;
              }
            }
          }
        }
      }

      ul {
        display: flex;
        flex-direction: column;
        gap: 20px;
        align-items: flex-start;

        &.sub-menu {
          display: none;
          @media (min-width: map.get(b.$grid-breakpoints, xl)) {
            display: block;
            position: absolute;
            z-index: 9;
            left: 0px;
            top: 50px;
            opacity: 0;
            visibility: hidden;
            transition: 0.35s;
          }
          padding: 10px;
          border-radius: 8px;
          li {
            padding: 5px 0;
            @media (max-width: map.get(b.$grid-breakpoints, xl)) {
              backdrop-filter: none;
              background-color: transparent;

              &:not(:last-child) {
                margin-bottom: 5px;
              }
            }
            a {
              white-space: nowrap;
            }
          }
        }
      }
    }

    .menu-item-has-children {
      a {
        &:not(:last-child) {
          position: relative;
          transition: rotate 0.45s;

          @media (max-width: map.get(b.$grid-breakpoints, xl)) {
            &.active {
              &::after {
                transform: rotate(180deg);
              }
            }
          }
          &::after {
            content: "";
            width: 15px;
            height: 15px;
            background-image: url(../assets/images/header/check.png);
            background-size: 13px 7px;
            vertical-align: middle;
            margin-left: 3px;
            background-repeat: no-repeat;
            background-position: center;
            display: inline-block;
            -webkit-transition: 0.3s ease-in-out;
            transition: 0.3s ease-in-out;
            position: relative;
          }
        }
      }
    }

    .grupa-passus {
      margin-left: 120px;
      a {
        color: var(--white);
        background-color: var(--passus-red);
        padding: 11px 24px;
        border-radius: 6px;
        transition: var(--transition);
        @media (hover: hover) {
          &:hover {
            background-color: var(--passus-red-hover);
          }
        }
      }
    }

    a {
      color: var(--black);
      line-height: 24px;
      font-size: 16px;
      font-weight: 400;

      @media (hover: hover) {
        &:hover {
        }
      }
    }
  }

  //__mobile
  &__nav {
    @media (max-width: map.get(b.$grid-breakpoints, xl)) {
      padding: 50px;
      position: fixed;
      left: -100%;
      top: 0;
      bottom: 0;
      width: 80%;
      z-index: 1000;
      flex-direction: column;
      align-items: start;
      overflow: auto;
      transition: all 0.5s;

      &.active {
        left: 0;

        a {
          font-size: 16px;
        }
      }
    }
  }
}
